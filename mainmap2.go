/*
В ходе анализа результатов переписи населения информация была сохранена в объекте типа map:

groupCity := map[int][]string{
	10:   []string{...}, // города с населением 10-99 тыс. человек
	100:  []string{...}, // города с населением 100-999 тыс. человек
	1000: []string{...}, // города с населением 1000 тыс. человек и более
}
При подготовке важного отчета о городах с населением 100-999 тыс. человек был подготовлен другой объект типа map:

cityPopulation := map[string]int{
	город: население города в тысячах человек,
}
Однако база данных с информацией о точной численности населения содержала ошибки, поэтому в cityPopulation в т.ч. была сохранена информация о городах, которые входят в другие группы из groupCity.

Ваша программа имеет доступ к обоим указанным отображениям, требуется исправить cityPopulation, чтобы в ней была сохранена информация только о городах из группы groupCity[100].

Функция main() уже объявлена, доступ к отображениям осуществляется по указанным именам. По результатам выполнения ничего больше делать не требуется, проверка будет осуществлена автоматически.
*/


package main

import (
	"fmt"
)

func main() {
	groupCity := map[int][]string{
		10:   []string{"Деревня", "Село"}, // города с населением 10-99 тыс. человек
		100:  []string{"Город", "Большой город"}, // города с населением 100-999 тыс. человек
		1000: []string{"Миллионик"}, // города с населением 1000 тыс. человек и более
	 }
	 cityPopulation := map[string]int{
		"Город" : 50,
		"Село" : 100,
		"Миллионик" : 500,
	 }
	result := false
	for value1, _ := range cityPopulation {
		fmt.Print(value1)
		for _, value2 := range groupCity[100] {
			fmt.Print(value2)
			if value1 == value2 {
				result = true
				break 
			} else {result = false}

		}
		if result == false {
			delete(cityPopulation, value1)
		}
	}
	
	fmt.Print(cityPopulation)
	
}

